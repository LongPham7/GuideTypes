@article{Baeten1993,
  title = {Decidability of Bisimulation Equivalence for Process Generating Context-Free Languages},
  author = {Baeten, J. C. M. and Bergstra, J. A. and Klop, J. W.},
  year = {1993},
  month = jul,
  journal = {Journal of the ACM},
  volume = {40},
  number = {3},
  pages = {653--682},
  issn = {0004-5411},
  doi = {10.1145/174130.174141},
  url = {https://doi.org/10.1145/174130.174141},
  urldate = {2022-09-24},
  keywords = {bisimulation semantics,context-free grammars,process algebra,simple context-free languages},
  file = {C:\Users\longp\OneDrive\CMU Research\Zotero research papers\Baeten_et_al_1993_Decidability_of_bisimulation.pdf}
}

@article{Christensen1995,
  title = {Bisimulation {{Equivalence Is Decidable}} for {{All Context-Free Processes}}},
  author = {Christensen, S. and Huttel, H. and Stirling, C.},
  year = {1995},
  month = sep,
  journal = {Information and Computation},
  volume = {121},
  number = {2},
  pages = {143--148},
  issn = {0890-5401},
  doi = {10.1006/inco.1995.1129},
  url = {https://www.sciencedirect.com/science/article/pii/S0890540185711297},
  urldate = {2022-09-24},
  abstract = {A result originally due to Baeten, Bergstra, and Klop shows that strong bisimulation equivalence for normed BPA processes is decidable. On the other hand, Huynh and Tian, and Groote and H\"uttel, have proved that all other standard equivalences are undecidable for normed BPA and thus for BPA in general, The open problem remaining has been whether bisimulation is decidable for the full BPA language. In this paper, we answer this question in the affirmative, using a proof technique based on the proof by Caucal of the decidability of language equivalence for simple algebraic grammars. The decision procedure relies on our main result, extending that of Caucal, that the maximal bisimulation of any BPA transition graph is finitely representable as a Thue congruence. The decision procedure consists of two semi-decision procedures, one testing for non-bisimilarity and one testing for bisimilarity.},
  langid = {english},
  keywords = {\_tablet},
  file = {C:\Users\longp\OneDrive\CMU Research\Zotero research papers\Christensen_et_al_1995_Bisimulation_Equivalence_Is_Decidable.pdf}
}

@inproceedings{Czerwinski2009,
  title = {Partially-{{Commutative Context-Free Processes}}},
  booktitle = {{{CONCUR}} 2009 - {{Concurrency Theory}}},
  author = {Czerwi{\'n}ski, Wojciech and Fr{\"o}schle, Sibylle and Lasota, S{\l}awomir},
  editor = {Bravetti, Mario and Zavattaro, Gianluigi},
  year = {2009},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {259--273},
  publisher = {{Springer}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/978-3-642-04081-8_18},
  abstract = {Bisimulation equivalence is decidable in polynomial time for both sequential and commutative normed context-free processes, known as BPA and BPP, respectively. Despite apparent similarity between the two classes, different techniques were used in each case. We provide one polynomial-time algorithm that works in a superclass of both normed BPA and BPP. It is derived in the setting of partially-commutative context-free processes, a new process class introduced in the paper. It subsumes both BPA and BPP and seems to be of independent interest.},
  isbn = {978-3-642-04081-8},
  langid = {english}
}

@inproceedings{Czerwinski2010,
  title = {Fast Equivalence-Checking for Normed Context-Free Processes},
  booktitle = {{{IARCS Annual Conference}} on {{Foundations}} of {{Software Technology}} and {{Theoretical Computer Science}} ({{FSTTCS}} 2010)},
  author = {Czerwinski, Wojciech and Lasota, Slawomir},
  editor = {Lodaya, Kamal and Mahajan, Meena},
  year = {2010},
  series = {Leibniz {{International Proceedings}} in {{Informatics}} ({{LIPIcs}})},
  volume = {8},
  pages = {260--271},
  publisher = {{Schloss Dagstuhl\textendash Leibniz-Zentrum fuer Informatik}},
  address = {{Dagstuhl, Germany}},
  issn = {1868-8969},
  doi = {10.4230/LIPIcs.FSTTCS.2010.260},
  url = {http://drops.dagstuhl.de/opus/volltexte/2010/2869},
  urldate = {2022-09-24},
  isbn = {978-3-939897-23-1},
  keywords = {bisimulation,context-free grammar,norm,simple grammar},
  file = {C:\Users\longp\OneDrive\CMU Research\Zotero research papers\Czerwinski_Lasota_2010_Fast_equivalence-checking_for_normed.pdf}
}

@misc{Engelfriet2015,
  title = {Tree {{Automata}} and {{Tree Grammars}}},
  author = {Engelfriet, Joost},
  year = {2015},
  month = oct,
  number = {arXiv:1510.02036},
  eprint = {1510.02036},
  primaryclass = {cs},
  publisher = {{arXiv}},
  doi = {10.48550/arXiv.1510.02036},
  url = {http://arxiv.org/abs/1510.02036},
  urldate = {2022-08-11},
  abstract = {Lecture notes on tree language theory, in particular recognizable tree languages and finite state tree transformations.},
  archiveprefix = {arxiv},
  keywords = {Computer Science - Formal Languages and Automata Theory}
}

@inproceedings{Fokkink2009,
  title = {Process {{Algebra}}: {{An Algebraic Theory}} of {{Concurrency}}},
  shorttitle = {Process {{Algebra}}},
  booktitle = {Algebraic {{Informatics}}},
  author = {Fokkink, Wan},
  editor = {Bozapalidis, Symeon and Rahonis, George},
  year = {2009},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {47--77},
  publisher = {{Springer}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/978-3-642-03564-7_3},
  abstract = {This tutorial provides an overview of the process algebra ACP.},
  isbn = {978-3-642-03564-7},
  langid = {english},
  keywords = {Algebraic Theory,Atomic Action,Process Algebra,Recursive Equation,Transition Rule},
  file = {C:\Users\longp\OneDrive\CMU Research\Zotero research papers\Fokkink_2009_Process_Algebra.pdf}
}

@article{Friedman1976,
  title = {The Inclusion Problem for Simple Languages},
  author = {Friedman, Emily P.},
  year = {1976},
  month = apr,
  journal = {Theoretical Computer Science},
  volume = {1},
  number = {4},
  pages = {297--316},
  issn = {0304-3975},
  doi = {10.1016/0304-3975(76)90074-8},
  url = {https://www.sciencedirect.com/science/article/pii/0304397576900748},
  urldate = {2022-10-03},
  abstract = {A deterministic pushdown acceptor is called a simple machine when it is restricted to have only one state, operate in real-time, and accept by empty store. While the existence of an effective procedure for deciding equivalence of languages accepted by these simple machines is well-known, it is shown that this family is powerful enough to have an undecidable inclusion problem. It follows that the inclusion problems for the LL(k) languages and the free monadic recursion schemes that do not use an identity function are also undecidable.},
  langid = {english}
}

@misc{Gecseg2015,
  title = {Tree {{Automata}}},
  author = {G{\'e}cseg, Ferenc and Steinby, Magnus},
  year = {2015},
  month = sep,
  number = {arXiv:1509.06233},
  eprint = {1509.06233},
  primaryclass = {cs},
  publisher = {{arXiv}},
  doi = {10.48550/arXiv.1509.06233},
  url = {http://arxiv.org/abs/1509.06233},
  urldate = {2022-08-11},
  abstract = {This is a reissue of the book Tree Automata by F. G\textbackslash 'ecseg and M. Steinby originally published in 1984 by Akad\textbackslash 'emiai Kiad\textbackslash 'o, Budapest. Some mistakes have been corrected and a few obscure passages have been clarified. Moreover, some more recent contributions and current lines of research are reviewed in an appendix that also contains several new references.},
  archiveprefix = {arxiv},
  keywords = {{68Q70, 68Q45},Computer Science - Formal Languages and Automata Theory,F.1.1,F.4.3}
}

@article{Groote1994,
  title = {Undecidable {{Equivalences}} for {{Basic Process Algebra}}},
  author = {Groote, J. F. and Huttel, H.},
  year = {1994},
  month = dec,
  journal = {Information and Computation},
  volume = {115},
  number = {2},
  pages = {354--371},
  issn = {0890-5401},
  doi = {10.1006/inco.1994.1101},
  url = {https://www.sciencedirect.com/science/article/pii/S0890540184711011},
  urldate = {2022-10-03},
  abstract = {A recent theorem shows that strong bisimilarity is decidable for the class of normed BPA processes, which correspond to a class of context-free grammars generating the {$\epsilon$}-free context-free languages. Huynh and Tian (Technical Report UTDCS-31-90, University of Texas at Dallas, 1990) have shown that readiness and failure equivalence are undecidable for BPA processes. In this paper we examine all other equivalences in the linear/branching time hierarchy and show that none of them are decidable for normed BPA processes.},
  langid = {english}
}

@inproceedings{Hirshfeld1994,
  title = {A {{Fast Algorithm}} for {{Deciding Bisimilarity}} of {{Normed Context-Free Processes}}},
  booktitle = {{{CONCUR}} '94: {{Concurrency Theory}}},
  author = {Hirshfeld, Yoram and Moller, Faron},
  editor = {Jonsson, Bengt and Parrow, Joachim},
  year = {1994},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {48--63},
  publisher = {{Springer}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/978-3-540-48654-1_5},
  abstract = {Until recently, algorithms for deciding bisimulation equivalence between normed context-free processes have all been nondeterministic. The optimal such algorithm, due to Huynh and Tian, is in {$<$}math display='block'{$><$}mrow{$><$}mstyle displaystyle='true'{$><$}msubsup{$><$}mo{$>\&\#$}x2211;{$<$}/mo{$><$}mn{$>$}2{$<$}/mn{$><$}mi{$>$}P{$<$}/mi{$><$}/msubsup{$><$}mrow{$><$}mo{$>$}={$<$}/mo{$><$}mi{$>$}N{$<$}/mi{$><$}msup{$><$}mi{$>$}P{$<$}/mi{$><$}mrow{$><$}mi{$>$}N{$<$}/mi{$><$}mi{$>$}P{$<$}/mi{$><$}/mrow{$><$}/msup{$><$}/mrow{$><$}/mstyle{$><$}/mrow{$><$}/math{$>$}]]{$<$}/EquationSource{$><$}EquationSource Format="TEX"{$>$}},
  isbn = {978-3-540-48654-1},
  langid = {english},
  keywords = {Deterministic Algorithm,Initial Base,Label Transition System,Polynomial Time,Process Algebra},
  file = {C:\Users\longp\OneDrive\CMU Research\Zotero research papers\Hirshfeld_Moller_1994_A_Fast_Algorithm_for_Deciding.pdf}
}

@inproceedings{Hirshfeld1994a,
  title = {A Polynomial-Time Algorithm for Deciding Equivalence of Normed Context-Free Processes},
  booktitle = {Proceedings 35th {{Annual Symposium}} on {{Foundations}} of {{Computer Science}}},
  author = {Hirshfeld, Y. and Jerrum, M. and Moller, F.},
  year = {1994},
  month = nov,
  pages = {623--631},
  doi = {10.1109/SFCS.1994.365729},
  url = {https://ieeexplore.ieee.org/document/365729},
  urldate = {2023-11-01},
  abstract = {A polynomial-time procedure is presented for deciding bisimilarity of normed context-free processes. It follows as a corollary that language equivalence of simple context-free grammars is decidable in polynomial time.{$<>$}}
}

@article{Hirshfeld1996,
  title = {A Polynomial Algorithm for Deciding Bisimilarity of Normed Context-Free Processes},
  author = {Hirshfeld, Yoram and Jerrum, Mark and Moller, Faron},
  year = {1996},
  month = may,
  journal = {Theoretical Computer Science},
  volume = {158},
  number = {1},
  pages = {143--159},
  issn = {0304-3975},
  doi = {10.1016/0304-3975(95)00064-X},
  url = {https://www.sciencedirect.com/science/article/pii/030439759500064X},
  urldate = {2022-09-24},
  abstract = {The previous best upper bound on the complexity of deciding bisimilarity between normed context-free processes is due to Huynh and Tian (1994), who put the problem in {$\Sigma$}2P = NPNP: their algorithm guesses a proof of equivalence and validates this proof in polynomial time using oracles freely answering questions which are in NP. In this paper we improve on this result by describing a polynomial-time algorithm which solves this problem. As a corollary, we have a polynomial algorithm for the equivalence problem for simple grammars.},
  langid = {english},
  file = {C:\Users\longp\OneDrive\CMU Research\Zotero research papers\Hirshfeld_et_al_1996_A_polynomial_algorithm_for_deciding.pdf}
}

@inproceedings{Jancar1999,
  title = {Techniques for {{Decidability}} and {{Undecidability}} of {{Bisimilarity}}},
  booktitle = {{{CONCUR}}'99 {{Concurrency Theory}}},
  author = {Jan{\v c}ar, Petr and Moller, Faron},
  editor = {Baeten, Jos C. M. and Mauw, Sjouke},
  year = {1999},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {30--45},
  publisher = {{Springer}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/3-540-48320-9_5},
  abstract = {In this tutorial we describe general approaches to deciding bisimilarity between vertices of (infinite) directed edge-labelled graphs. The approaches are based on a systematic search following the definition of bisimilarity. We outline (in decreasing levels of detail) how the search is modified to solve the problem for finite graphs, BPP graphs, BPA graphs, normed PA graphs, and normed PDA graphs. We complete this by showing the technique used in the case of graphs generated by onecounter machines. Finally, we demonstrate a general reduction strategy for proving undecidability, which we apply in the case of graphs generated by state-extended BPP (a restricted form of labelled Petri nets).},
  isbn = {978-3-540-48320-5},
  langid = {english},
  keywords = {Commutative Semigroup,Expansion Tree,Outgoing Edge,Sibling Node,Winning Strategy},
  file = {C:\Users\longp\OneDrive\CMU Research\Zotero research papers\Jancar_Moller_1999_Techniques_for_Decidability_and.pdf}
}

@misc{Jancar2011,
  title = {A {{Short Decidability Proof}} for {{DPDA Language Equivalence}} via {{First-Order Grammars}}},
  author = {Jancar, Petr},
  year = {2011},
  month = mar,
  number = {arXiv:1010.4760},
  eprint = {1010.4760},
  primaryclass = {cs},
  publisher = {{arXiv}},
  doi = {10.48550/arXiv.1010.4760},
  url = {http://arxiv.org/abs/1010.4760},
  urldate = {2022-09-13},
  abstract = {The main aim of the paper is to give a short self-contained proof of the decidability of language equivalence for deterministic pushdown automata, which is the famous problem solved by G. Senizergues, for which C. Stirling has derived a primitive recursive complexity upper bound. The proof here is given in the framework of first-order grammars, which seems to be particularly apt for the aim. An appendix presents a modification of Stirling's approach, yielding a complexity bound of the form tetr(2,g(n)) where tetr is the (nonelementary) operator of iterated exponentiation (tetration) and g is an elementary function of the input size.},
  archiveprefix = {arxiv},
  keywords = {Computer Science - Formal Languages and Automata Theory}
}

@article{Jancar2013,
  title = {Bisimilarity on {{Basic Process Algebra}} Is in 2-{{ExpTime}} (an Explicit Proof)},
  author = {Jancar, Petr},
  year = {2013},
  month = mar,
  journal = {Logical Methods in Computer Science},
  volume = {9},
  number = {1},
  eprint = {1207.2479},
  primaryclass = {cs},
  pages = {10},
  issn = {18605974},
  doi = {10.2168/LMCS-9(1:10)2013},
  url = {http://arxiv.org/abs/1207.2479},
  urldate = {2022-09-24},
  abstract = {Burkart, Caucal, Steffen (1995) showed a procedure deciding bisimulation equivalence of processes in Basic Process Algebra (BPA), i.e. of sequential processes generated by context-free grammars. They improved the previous decidability result of Christensen, H\textbackslash "uttel, Stirling (1992), since their procedure has obviously an elementary time complexity and the authors claim that a close analysis would reveal a double exponential upper bound. Here a self-contained direct proof of the membership in 2-ExpTime is given. This is done via a Prover-Refuter game which shows that there is an alternating Turing machine deciding the problem in exponential space. The proof uses similar ingredients (size-measures, decompositions, bases) as the previous proofs, but one new simplifying factor is an explicit addition of infinite regular strings to the state space. An auxiliary claim also shows an explicit exponential upper bound on the equivalence level of nonbisimilar normed BPA processes. The importance of clarifying the 2-ExpTime upper bound for BPA bisimilarity has recently increased due to the shift of the known lower bound from PSpace (Srba, 2002) to ExpTime (Kiefer, 2012).},
  archiveprefix = {arxiv},
  keywords = {Computer Science - Formal Languages and Automata Theory,Computer Science - Logic in Computer Science,F.3.2,F.4.2},
  file = {C:\Users\longp\OneDrive\CMU Research\Zotero research papers\Jancar_2013_Bisimilarity_on_Basic_Process_Algebra.pdf}
}

@inproceedings{Jancar2019,
  title = {Bisimulation {{Equivalence}} of {{First-Order Grammars}} Is {{ACKERMANN-Complete}}},
  booktitle = {2019 34th {{Annual ACM}}/{{IEEE Symposium}} on {{Logic}} in {{Computer Science}} ({{LICS}})},
  author = {Jan{\v c}ar, Petr and Schmitz, Sylvain},
  year = {2019},
  month = jun,
  pages = {1--12},
  doi = {10.1109/LICS.2019.8785848},
  abstract = {Checking whether two pushdown automata with restricted silent actions are weakly bisimilar was shown decidable by S\'enizergues (1998, 2005). We provide the first known complexity upper bound for this famous problem, in the equivalent setting of first-order grammars. This ACKERMANN upper bound is optimal, and we also show that strong bisimilarity is primitive-recursive when the number of states of the automata is fixed.},
  keywords = {Automata,bisimila-rity,Complexity theory,fast-growing complexity,first-order grammar,Grammar,Poles and towers,Pushdown system,Reactive power,Semantics,Upper bound},
  file = {C:\Users\longp\OneDrive\CMU Research\Zotero research papers\Jancar_Schmitz_2019_Bisimulation_Equivalence_of_First-Order.pdf}
}

@article{Jancar2021,
  title = {Equivalence of Pushdown Automata via First-Order Grammars},
  author = {Jan{\v c}ar, Petr},
  year = {2021},
  month = feb,
  journal = {Journal of Computer and System Sciences},
  volume = {115},
  pages = {86--112},
  issn = {0022-0000},
  doi = {10.1016/j.jcss.2020.07.004},
  url = {https://www.sciencedirect.com/science/article/pii/S0022000020300714},
  urldate = {2022-09-22},
  abstract = {A decidability proof for bisimulation equivalence of first-order grammars is given. It is an alternative proof for a result by S\'enizergues (1998, 2005) that subsumes his affirmative solution of the famous decidability question for deterministic pushdown automata. The presented proof is conceptually simpler, and a particular novelty is that it is not given as two semidecision procedures but it provides an explicit algorithm that might be amenable to a complexity analysis.},
  langid = {english},
  keywords = {Bisimulation equivalence,First-order grammars,Pushdown automata}
}

@article{Kiefer2013,
  title = {{{BPA}} Bisimilarity Is {{EXPTIME-hard}}},
  author = {Kiefer, Stefan},
  year = {2013},
  month = feb,
  journal = {Information Processing Letters},
  volume = {113},
  number = {4},
  pages = {101--106},
  issn = {0020-0190},
  doi = {10.1016/j.ipl.2012.12.004},
  url = {https://www.sciencedirect.com/science/article/pii/S0020019012003079},
  urldate = {2022-09-24},
  abstract = {Given a basic process algebra (BPA) and two stack symbols, the BPA bisimilarity problem asks whether the two stack symbols are bisimilar. We show that this problem is EXPTIME-hard.},
  langid = {english},
  keywords = {Basic process algebra,Bisimilarity,Computational complexity}
}

@misc{Kucera2005,
  title = {Equivalence-{{Checking}} on {{Infinite-State Systems}}: {{Techniques}} and {{Results}}},
  shorttitle = {Equivalence-{{Checking}} on {{Infinite-State Systems}}},
  author = {Kucera, Antonin and Jancar, Petr},
  year = {2005},
  month = may,
  number = {arXiv:cs/0505025},
  eprint = {cs/0505025},
  publisher = {{arXiv}},
  doi = {10.48550/arXiv.cs/0505025},
  url = {http://arxiv.org/abs/cs/0505025},
  urldate = {2022-09-24},
  abstract = {The paper presents a selection of recently developed and/or used techniques for equivalence-checking on infinite-state systems, and an up-to-date overview of existing results (as of September 2004).},
  archiveprefix = {arxiv},
  keywords = {Computer Science - Logic in Computer Science}
}

@inproceedings{Lasota2006,
  title = {Faster {{Algorithm}} for {{Bisimulation Equivalence}} of {{Normed Context-Free Processes}}},
  booktitle = {Mathematical {{Foundations}} of {{Computer Science}} 2006},
  author = {Lasota, S{\l}awomir and Rytter, Wojciech},
  editor = {Kr{\'a}lovi{\v c}, Rastislav and Urzyczyn, Pawe{\l}},
  year = {2006},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {646--657},
  publisher = {{Springer}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/11821069_56},
  abstract = {The fastest known algorithm for checking bisimulation equivalence of normed context-free processes worked in O(n13) time. We give an alternative algorithm working in \$O(n\^8 \{\textbackslash sl polylog\} n)\$time, As a side effect we improve the best known upper bound for testing equivalence of simple context-free grammars from \$O(n\^7 \{\textbackslash sl polylog\} n)\$to \$O(n\^6 \{\textbackslash sl polylog\} n)\$.},
  isbn = {978-3-540-37793-1},
  langid = {english},
  keywords = {Boolean Equation,Decomposition Point,Great Solution,Mismatch Problem,Terminal Symbol}
}

@article{Milner1993,
  title = {Unique Decomposition of Processes},
  author = {Milner, Robin and Moller, Faron},
  year = {1993},
  month = jan,
  journal = {Theoretical Computer Science},
  volume = {107},
  number = {2},
  pages = {357--363},
  issn = {0304-3975},
  doi = {10.1016/0304-3975(93)90176-T},
  url = {https://www.sciencedirect.com/science/article/pii/030439759390176T},
  urldate = {2022-09-26},
  abstract = {In this paper, we examine questions about the prime decomposability of processes, where we define a process to be prime whenever it cannot be decomposed into nontrivial components. We show that any finite process can be uniquely decomposed into prime processes with respect to bisimulation equivalence, and demonstrate counterexamples to such a result for both failures (testing) equivalence and trace equivalence. Although we show that prime decompositions cannot exist for arbitrary infinite processes, we motivate but leave as open a conjecture on the unique decomposability of a wide subclass of infinite behaviours.},
  langid = {english},
  file = {C:\Users\longp\OneDrive\CMU Research\Zotero research papers\Milner_Moller_1993_Unique_decomposition_of_processes.pdf}
}

@article{Senizergues2001,
  title = {L({{A}})={{L}}({{B}})? Decidability Results from Complete Formal Systems},
  shorttitle = {L({{A}})={{L}}({{B}})?},
  author = {S{\'e}nizergues, G{\'e}raud},
  year = {2001},
  month = jan,
  journal = {Theoretical Computer Science},
  volume = {251},
  number = {1},
  pages = {1--166},
  issn = {0304-3975},
  doi = {10.1016/S0304-3975(00)00285-1},
  url = {https://www.sciencedirect.com/science/article/pii/S0304397500002851},
  urldate = {2022-09-24},
  abstract = {The equivalence problem for deterministic pushdown automata is shown to be decidable. We exhibit a complete formal system for deducing equivalent pairs of deterministic rational boolean series on the alphabet associated with a dpda M. We then extend the result to deterministic pushdown transducers from a free monoid into an abelian group. A general algebraic and logical framework, inspired by Harrison et al. (Theoret. Comput. Sci. 9 (1979) 173\textendash 205), Conrcelle (Theoret. Comput. Sci. 6 (1978) 255\textendash 279) and Meitus (Kybernetika 5 (1989) 14\textendash 25 (in Russian)) is developed.},
  langid = {english},
  keywords = {Complete formal systems,Deterministic pushdown automata,Finite-dimensional vector spaces,Matrix semi-groups,Rational series}
}

@inproceedings{Solomon1978,
  title = {Type Definitions with Parameters},
  booktitle = {Proceedings of the 5th {{ACM SIGACT-SIGPLAN}} Symposium on {{Principles}} of Programming Languages},
  author = {Solomon, Marvin},
  year = {1978},
  month = jan,
  series = {{{POPL}} '78},
  pages = {31--38},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/512760.512765},
  url = {https://doi.org/10.1145/512760.512765},
  urldate = {2022-08-11},
  abstract = {It has long been known that recursively defined types in a highly typed language such as Algol 68 or Pascal may be tested for structural equivalence by the same algorithm that compares finite automata [5,11]. Several authors (for example, [3,8,9,16]) have proposed that classes of types be simultaneously defined by the use of parameterized type definitions, such asType list(x) = record val:x; next:{$\uparrow$}list(x) end .This paper shows that unless the use of such parameterized definitions is restricted, new (unparameterized) types may be defined which more closely resemble deterministic context-free languages. In fact, the equivalence problem for such types becomes as hard as the (currently unsolved) deterministic pushdown automaton equivalence problem. Several restrictions on type definitions are considered which allow known equivalence algorithms to be applied.},
  isbn = {978-1-4503-7348-7},
  file = {C:\Users\longp\OneDrive\CMU Research\Zotero research papers\Solomon_1978_Type_definitions_with_parameters.pdf}
}

@incollection{Srba2004,
  title = {Roadmap of Infinite Results},
  booktitle = {Current {{Trends}} in {{Theoretical Computer Science}}},
  author = {Srba, Jiri},
  year = {2004},
  month = apr,
  pages = {337--350},
  publisher = {{WORLD SCIENTIFIC}},
  doi = {10.1142/9789812562494_0054},
  url = {https://www.worldscientific.com/doi/10.1142/9789812562494_0054},
  urldate = {2022-09-24},
  isbn = {978-981-238-783-7},
  file = {C:\Users\longp\OneDrive\CMU Research\Zotero research papers\Srba_2004_Roadmap_of_infinite_results.pdf}
}
