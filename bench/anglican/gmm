# https://probprog.github.io/anglican/examples/viewer/?worksheet=gmm-iris

type Latent
type Observation

proc Model() -> unit | lat : Latent | obs : Observation = {
  pi <- observe{lat}(D.dirich[3](tensor([| 1; 1; 1 |])));
  lambda_0 <- { return T.eye[2]() };
  lambda_1 <- observe{lat}(D.wishart[2](lambda_0; 3));
  lambda_2 <- observe{lat}(D.wishart[2](lambda_0; 3));
  lambda_3 <- observe{lat}(D.wishart[2](lambda_0; 3));
  lambdas <- { return fn (i: nat[3]) ->
    if i = 0 then
      lambda_1
    else if i = 1 then
      lambda_2
    else
      lambda_3
  };
  mu_0 <- { return tensor([| 0; 0 |]) };
  mu_1 <- observe{lat}(D.mvn[2](mu_0; T.inv[2](lambda_1)));
  mu_2 <- observe{lat}(D.mvn[2](mu_0; T.inv[2](lambda_2)));
  mu_3 <- observe{lat}(D.mvn[2](mu_0; T.inv[2](lambda_3)));
  mus <- { return fn (i: nat[3]) ->
    if i = 0 then
      mu_1
    else if i = 1 then
      mu_2
    else
      mu_3
  };
  _ <- loop[100; ()] (fn (acc: unit) ->
    k <- observe{lat}(D.disc[3](pi));
    _ <- sample{obs}(D.mvn[2](mus(k); T.inv[2](lambdas(k))));
    return ());
  return ()
}
