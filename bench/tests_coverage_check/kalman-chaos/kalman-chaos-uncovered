# https://probprog.github.io/anglican/examples/viewer/?source=github&user=probprog&repo=bopp&path=worksheets/chaos.clj

external obs_dist: (real; [3]) tensor -> (real; [20]) tensor dist

type Old_trace
type Latent
type Init_type = ureal_u /\ ureal_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ real_u /\ $

proc Guide1() -> unit | old : Old_trace | lat : Latent = {
  beta <- {
    _ <- observe{old}(UNIF);
    tmp <- sample{lat}(UNIF);
    return (tmp * 6.0 - 3.0)
  };
  nu <- {
    _ <- observe{old}(UNIF);
    tmp <- sample{lat}(UNIF);
    return (tmp * 3.0)
  };
  delta_dist <- { return NORMAL(0; 0.01) };
  init_vals <- {
    _ <- observe{old}(NORMAL(1.5; 0.2));
    _ <- observe{old}(NORMAL(1.5; 0.2));
    _ <- observe{old}(NORMAL(1.5; 0.2));

    tmp0 <- sample{lat}(SAME(real));
    tmp1 <- sample{lat}(SAME(real));
    tmp2 <- sample{lat}(SAME(real));
    return stack(tensor(tmp0); tensor(tmp1); tensor(tmp2))
  };

  _ <- loop[25; init_vals] (fn (prev_vals: (real; [3]) tensor) ->
    next_vals <- {
      _ <- observe{old}(delta_dist);
      _ <- observe{old}(delta_dist);
      _ <- observe{old}(delta_dist);

      tmp0 <- sample{lat}(delta_dist);
      tmp1 <- sample{lat}(delta_dist);
      tmp2 <- sample{lat}(delta_dist);
      return prev_vals + stack(tensor(tmp0); tensor(tmp1); tensor(tmp2))
    };
    return next_vals);
  
  _ <- loop[25; init_vals] (fn (prev_vals: (real; [3]) tensor) ->
    next_vals <- {
      _ <- observe{old}(delta_dist);
      _ <- observe{old}(delta_dist);
      _ <- observe{old}(delta_dist);

      tmp0 <- sample{lat}(SAME(real));
      tmp1 <- sample{lat}(SAME(real));
      tmp2 <- sample{lat}(SAME(real));
      return prev_vals + stack(tensor(tmp0); tensor(tmp1); tensor(tmp2))
    };
    return next_vals);

  return ()
}

proc Guide2() -> unit | old : Old_trace | lat : Latent = {
  beta <- {
    _ <- observe{old}(UNIF);
    tmp <- sample{lat}(SAME(ureal));
    return (tmp * 6.0 - 3.0)
  };
  nu <- {
    _ <- observe{old}(UNIF);
    tmp <- sample{lat}(SAME(ureal));
    return (tmp * 3.0)
  };
  delta_dist <- { return NORMAL(0; 0.01) };
  init_vals <- {
    _ <- observe{old}(NORMAL(1.5; 0.2));
    _ <- observe{old}(NORMAL(1.5; 0.2));
    _ <- observe{old}(NORMAL(1.5; 0.2));

    tmp0 <- sample{lat}(NORMAL(1.5; 0.2));
    tmp1 <- sample{lat}(NORMAL(-0.8; 0.2));
    tmp2 <- sample{lat}(NORMAL(-0.2; 0.2));
    return stack(tensor(tmp0); tensor(tmp1); tensor(tmp2))
  };

  _ <- loop[25; init_vals] (fn (prev_vals: (real; [3]) tensor) ->
    next_vals <- {
      _ <- observe{old}(delta_dist);
      _ <- observe{old}(delta_dist);
      _ <- observe{old}(delta_dist);

      tmp0 <- sample{lat}(SAME(real));
      tmp1 <- sample{lat}(SAME(real));
      tmp2 <- sample{lat}(SAME(real));
      return prev_vals + stack(tensor(tmp0); tensor(tmp1); tensor(tmp2))
    };
    return next_vals);

  _ <- loop[25; init_vals] (fn (prev_vals: (real; [3]) tensor) ->
    next_vals <- {
      _ <- observe{old}(delta_dist);
      _ <- observe{old}(delta_dist);
      _ <- observe{old}(delta_dist);

      tmp0 <- sample{lat}(delta_dist);
      tmp1 <- sample{lat}(delta_dist);
      tmp2 <- sample{lat}(SAME(real));
      return prev_vals + stack(tensor(tmp0); tensor(tmp1); tensor(tmp2))
    };
    return next_vals);
    
  return ()
}

Initial_type: Init_type
Guide_composition: Guide1; Guide2
