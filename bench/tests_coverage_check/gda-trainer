# https://probprog.github.io/anglican/examples/viewer/?worksheet=classification

external identity_matrix3: (real; [3; 3]) tensor

external dirichlet2: (preal; [2]) tensor -> simplex[2] dist
external mvn3: (real; [3]) tensor -> (real; [3; 3]) tensor -> (real; [3]) tensor dist

external gda2: simplex[2] -> (real; [3]) tensor dist -> (real; [3]) tensor dist -> (real; [3]) tensor dist

type Old_trace
type Latent

type Init_type = (real; [3]) tensor_u /\ (real; [3]) tensor_u /\ simplex_u[2] /\ $
# type Init_type = preal_u /\ &{ $ | ureal_u /\ $ }

proc Guide() -> unit | old : Old_trace | lat : Latent = {
  mu_prior <- { return mvn3(stack(tensor(1); tensor(1); tensor(1)))(identity_matrix3) };
  _ <- observe{old}(mu_prior);
  mu1 <- sample{lat}(mu_prior);
  _ <- observe{old}(mu_prior);
  mu2 <- sample{lat}(mu_prior);
  _ <- observe{old}(dirichlet2(stack(tensor(1); tensor(1))));
  pi <- sample{lat}(dirichlet2(stack(tensor(1); tensor(1))));
  gda_dist <- { return let sigma = identity_matrix3 in gda2(pi)(mvn3(mu1)(sigma))(mvn3(mu2)(sigma)) end };
  return ()
}

Initial_type: Init_type
Guide_composition: Guide
